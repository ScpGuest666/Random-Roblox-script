-- Create Main ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false

-- Create Main Frame
local frame = Instance.new("Frame")
frame.Parent = screenGui
frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
frame.Size = UDim2.new(0, 200, 0, 150)
frame.Position = UDim2.new(0.5, -100, 0.5, -75)
frame.Active = true
frame.Draggable = true

-- Create On Button
local onButton = Instance.new("TextButton")
onButton.Parent = frame
onButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
onButton.Size = UDim2.new(0, 60, 0, 30)
onButton.Position = UDim2.new(0, 20, 0, 20)
onButton.Text = "On"
onButton.TextScaled = true

-- Create Off Button
local offButton = Instance.new("TextButton")
offButton.Parent = frame
offButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
offButton.Size = UDim2.new(0, 60, 0, 30)
offButton.Position = UDim2.new(0, 120, 0, 20)
offButton.Text = "Off"
offButton.TextScaled = true

-- Create Destroy Button
local destroyButton = Instance.new("TextButton")
destroyButton.Parent = frame
destroyButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
destroyButton.Size = UDim2.new(0, 160, 0, 30)
destroyButton.Position = UDim2.new(0, 20, 0, 60)
destroyButton.Text = "Destroy"
destroyButton.TextScaled = true

-- Create Status Indicator
local statusLabel = Instance.new("TextLabel")
statusLabel.Parent = frame
statusLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.Size = UDim2.new(0, 200, 0, 30)
statusLabel.Position = UDim2.new(0, 0, 0, -30)
statusLabel.Text = "Status: Off"
statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
statusLabel.TextScaled = true

-- Platform Variables
local spawnedPlatform = nil
local isPlatformActive = false
local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera
local forwardGui = nil
local tweenService = game:GetService("TweenService")
local currentTween = nil

-- Movement Speed Variable
local movementSpeed = 10

-- Calculate positions for speed controls
local speedControlsYPos = 100
local speedLabelWidth = 100
local buttonWidth = 30
local frameWidth = 200
local speedLabelXPos = (frameWidth - speedLabelWidth) / 2
local plusButtonXPos = speedLabelXPos - buttonWidth
local minusButtonXPos = speedLabelXPos + speedLabelWidth

-- Plus Button
local plusButton = Instance.new("TextButton")
plusButton.Parent = frame
plusButton.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
plusButton.Size = UDim2.new(0, buttonWidth, 0, 30)
plusButton.Position = UDim2.new(0, plusButtonXPos, 0, speedControlsYPos)
plusButton.Text = "+"
plusButton.TextScaled = true

-- Minus Button
local minusButton = Instance.new("TextButton")
minusButton.Parent = frame
minusButton.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
minusButton.Size = UDim2.new(0, buttonWidth, 0, 30)
minusButton.Position = UDim2.new(0, minusButtonXPos, 0, speedControlsYPos)
minusButton.Text = "-"
minusButton.TextScaled = true

-- Speed TextBox (Replaced TextLabel)
local speedTextBox = Instance.new("TextBox")
speedTextBox.Parent = frame
speedTextBox.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
speedTextBox.Size = UDim2.new(0, speedLabelWidth, 0, 30)
speedTextBox.Position = UDim2.new(0, speedLabelXPos, 0, speedControlsYPos)
speedTextBox.Text = "Speed: 10"
speedTextBox.TextScaled = true
speedTextBox.ClearTextOnFocus = false
speedTextBox.PlaceholderText = "Enter speed"

-- Function to validate and update speed from TextBox
local function updateSpeedFromTextBox()
    local text = speedTextBox.Text
    local number = tonumber(string.match(text, "%d+"))

    if number and number >= 1 then
        movementSpeed = number
        speedTextBox.Text = "Speed: " .. movementSpeed
    else
        speedTextBox.Text = "Speed: " .. movementSpeed
    end
end

-- Update speed when text changes and Enter is pressed
speedTextBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        updateSpeedFromTextBox()
    end
end)

plusButton.MouseButton1Click:Connect(function()
    movementSpeed = movementSpeed + 1
    speedTextBox.Text = "Speed: " .. movementSpeed
end)

minusButton.MouseButton1Click:Connect(function()
    if movementSpeed > 1 then
        movementSpeed = movementSpeed - 1
        speedTextBox.Text = "Speed: " .. movementSpeed
    end
end)

-- Function to spawn the platform
local function spawnPlatform()
    local char = player.Character or player.CharacterAdded:Wait()
    if not char or not char:FindFirstChild("HumanoidRootPart") then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")

    if spawnedPlatform then
        spawnedPlatform:Destroy()
        spawnedPlatform = nil
    end

    spawnedPlatform = Instance.new("Part")
    spawnedPlatform.Name = "RedPlatform"
    spawnedPlatform.Size = Vector3.new(3, 1, 3)
    spawnedPlatform.BrickColor = BrickColor.Red()
    spawnedPlatform.Anchored = true
    spawnedPlatform.CanCollide = true
    spawnedPlatform.Parent = workspace

    local offset = Vector3.new(0, 2.5, 0)
    spawnedPlatform.CFrame = CFrame.new(hrp.Position + offset)

    -- Set camera to follow platform
    camera.CameraSubject = spawnedPlatform

    --Create Forward Button GUI
    forwardGui = Instance.new("ScreenGui")
    forwardGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    forwardGui.ResetOnSpawn = false

    -- Create Forward Button Frame
    local forwardFrame = Instance.new("Frame")
    forwardFrame.Parent = forwardGui
    forwardFrame.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
    forwardFrame.Size = UDim2.new(0, 140, 0, 70) -- Increased width to fit buttons
    forwardFrame.Position = UDim2.new(0, 10, 1, -90)
    forwardFrame.Active = true
    forwardFrame.Draggable = false
    forwardFrame.BorderSizePixel = 0

    -- Create Forward Button
    local forwardButton = Instance.new("TextButton")
    forwardButton.Parent = forwardFrame
    forwardButton.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
    forwardButton.Size = UDim2.new(0.38, 0, 0.5, 0) -- Reduced width to 30%
    forwardButton.Text = "Forward"
    forwardButton.TextScaled = true
    forwardButton.Position = UDim2.new(0.31,0,0,0) -- Placed 10% into the left

    --Create Backward Button
    local backwardButton = Instance.new("TextButton")
    backwardButton.Parent = forwardFrame
    backwardButton.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
    backwardButton.Size = UDim2.new(0.38, 0, 0.5, 0) -- Reduced width to 30%
    backwardButton.Text = "Backward"
    backwardButton.TextScaled = true
    backwardButton.Position = UDim2.new(0.31,0,0.5,0) -- Placed 10% into the left

    -- Create Right Button
    local rightButton = Instance.new("TextButton")
    rightButton.Parent = forwardFrame
    rightButton.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
    rightButton.Size = UDim2.new(0.3, 0, 1, 0) -- Increased height to full height
    rightButton.Text = "Right"
    rightButton.TextScaled = true
    rightButton.Position = UDim2.new(0.7,0,0,0) -- Placed 10% to the right

    -- Create Left Button
    local leftButton = Instance.new("TextButton")
    leftButton.Parent = forwardFrame
    leftButton.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
    leftButton.Size = UDim2.new(0.3, 0, 1, 0) -- Increased height to full height
    leftButton.Text = "Left"
    leftButton.TextScaled = true
    leftButton.Position = UDim2.new(0,0,0,0) -- Placed 10% to the left

    forwardButton.MouseButton1Click:Connect(function()
        if not isPlatformActive then
            return
        end
        local char = player.Character or player.CharacterAdded:Wait()
        if not char or not char:FindFirstChild("HumanoidRootPart") then return end
        local hrp = char:FindFirstChild("HumanoidRootPart")

        if not spawnedPlatform then
            return
        end

        local currentPlatformCFrame = spawnedPlatform.CFrame
        local offset = camera.CFrame.LookVector * movementSpeed
        local targetCFrame = currentPlatformCFrame + offset

        local tweenInfo = TweenInfo.new(
            0.4,
            Enum.EasingStyle.Quad,
            Enum.EasingDirection.Out,
            0,
            false,
            0
        )

        if currentTween then
            currentTween:Cancel()
        end
        currentTween = tweenService:Create(spawnedPlatform, tweenInfo, {CFrame = targetCFrame})
        currentTween:Play()

        camera.CameraSubject = spawnedPlatform
    end)

    backwardButton.MouseButton1Click:Connect(function()
        if not isPlatformActive then
            return
        end
        local char = player.Character or player.CharacterAdded:Wait()
        if not char or not char:FindFirstChild("HumanoidRootPart") then return end
        local hrp = char:FindFirstChild("HumanoidRootPart")

        if not spawnedPlatform then
            return
        end

        local currentPlatformCFrame = spawnedPlatform.CFrame
        local offset = -camera.CFrame.LookVector * movementSpeed
        local targetCFrame = currentPlatformCFrame + offset

         local tweenInfo = TweenInfo.new(
            0.4,
            Enum.EasingStyle.Quad,
            Enum.EasingDirection.Out,
            0,
            false,
            0
        )

        if currentTween then
            currentTween:Cancel()
        end
        currentTween = tweenService:Create(spawnedPlatform, tweenInfo, {CFrame = targetCFrame})
        currentTween:Play()

        camera.CameraSubject = spawnedPlatform
    end)

    rightButton.MouseButton1Click:Connect(function()
        if not isPlatformActive then
            return
        end
        local char = player.Character or player.CharacterAdded:Wait()
        if not char or not char:FindFirstChild("HumanoidRootPart") then return end
        local hrp = char:FindFirstChild("HumanoidRootPart")

        if not spawnedPlatform then
            return
        end

        local currentPlatformCFrame = spawnedPlatform.CFrame
        local offset = camera.CFrame.RightVector * movementSpeed
        local targetCFrame = currentPlatformCFrame + offset

        local tweenInfo = TweenInfo.new(
            0.4,
            Enum.EasingStyle.Quad,
            Enum.EasingDirection.Out,
            0,
            false,
            0
        )

        if currentTween then
            currentTween:Cancel()
        end
        currentTween = tweenService:Create(spawnedPlatform, tweenInfo, {CFrame = targetCFrame})
        currentTween:Play()

        camera.CameraSubject = spawnedPlatform
    end)

    leftButton.MouseButton1Click:Connect(function()
        if not isPlatformActive then
            return
        end
        local char = player.Character or player.CharacterAdded:Wait()
        if not char or not char:FindFirstChild("HumanoidRootPart") then return end
        local hrp = char:FindFirstChild("HumanoidRootPart")

        if not spawnedPlatform then
            return
        end

        local currentPlatformCFrame = spawnedPlatform.CFrame
        local offset = -camera.CFrame.RightVector * movementSpeed
        local targetCFrame = currentPlatformCFrame + offset

         local tweenInfo = TweenInfo.new(
            0.4,
            Enum.EasingStyle.Quad,
            Enum.EasingDirection.Out,
            0,
            false,
            0
        )

        if currentTween then
            currentTween:Cancel()
        end
        currentTween = tweenService:Create(spawnedPlatform, tweenInfo, {CFrame = targetCFrame})
        currentTween:Play()

        camera.CameraSubject = spawnedPlatform
    end)
end

local function destroyPlatform()
    if forwardGui then
        forwardGui:Destroy()
        forwardGui = nil
    end

    if spawnedPlatform then
        -- Revert camera back to the character
        if camera.CameraSubject == spawnedPlatform then
            camera.CameraSubject = player.Character:FindFirstChild("Humanoid") or player.Character:FindFirstChild("HumanoidRootPart")
        end
        spawnedPlatform:Destroy()
        spawnedPlatform = nil
        currentTween = nil
    end
end

-- Button Functions
onButton.MouseButton1Click:Connect(function()
    if not isPlatformActive then
        spawnPlatform()
        isPlatformActive = true
        statusLabel.Text = "Status: On"
        statusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    end
end)

offButton.MouseButton1Click:Connect(function()
    if isPlatformActive then
        destroyPlatform()
        isPlatformActive = false
        statusLabel.Text = "Status: Off"
        statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
    end
end)

destroyButton.MouseButton1Click:Connect(function()
    if isPlatformActive then
        destroyPlatform()
        isPlatformActive = false
    end
    screenGui:Destroy()
end)
