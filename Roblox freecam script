-- Create Main ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false

-- Create Main Frame
local frame = Instance.new("Frame")
frame.Parent = screenGui
frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
frame.Size = UDim2.new(0, 200, 0, 150)
frame.Position = UDim2.new(0.5, -100, 0.5, -75)
frame.Active = true
frame.Draggable = true

-- Create On Button
local onButton = Instance.new("TextButton")
onButton.Parent = frame
onButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
onButton.Size = UDim2.new(0, 60, 0, 30)
onButton.Position = UDim2.new(0, 20, 0, 20)
onButton.Text = "On"
onButton.TextScaled = true

-- Create Off Button
local offButton = Instance.new("TextButton")
offButton.Parent = frame
offButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
offButton.Size = UDim2.new(0, 60, 0, 30)
offButton.Position = UDim2.new(0, 120, 0, 20)
offButton.Text = "Off"
offButton.TextScaled = true

-- Create Destroy Button
local destroyButton = Instance.new("TextButton")
destroyButton.Parent = frame
destroyButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
destroyButton.Size = UDim2.new(0, 160, 0, 30)
destroyButton.Position = UDim2.new(0, 20, 0, 60)
destroyButton.Text = "Destroy"
destroyButton.TextScaled = true

-- Create Status Indicator
local statusLabel = Instance.new("TextLabel")
statusLabel.Parent = frame
statusLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.Size = UDim2.new(0, 200, 0, 30)
statusLabel.Position = UDim2.new(0, 0, 0, -30)
statusLabel.Text = "Status: Off"
statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
statusLabel.TextScaled = true

-- Platform Variables
local spawnedPlatform = nil
local isPlatformActive = false
local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera
local forwardGui = nil
local tweenService = game:GetService("TweenService")
local currentTween = nil
local movementSpeed = 10

-- UI positioning values
local speedControlsYPos = 100
local speedLabelWidth = 100
local buttonWidth = 30
local frameWidth = 200
local speedLabelXPos = (frameWidth - speedLabelWidth) / 2
local plusButtonXPos = speedLabelXPos - buttonWidth
local minusButtonXPos = speedLabelXPos + speedLabelWidth

-- Plus Button
local plusButton = Instance.new("TextButton")
plusButton.Parent = frame
plusButton.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
plusButton.Size = UDim2.new(0, buttonWidth, 0, 30)
plusButton.Position = UDim2.new(0, plusButtonXPos, 0, speedControlsYPos)
plusButton.Text = "+"
plusButton.TextScaled = true

-- Minus Button
local minusButton = Instance.new("TextButton")
minusButton.Parent = frame
minusButton.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
minusButton.Size = UDim2.new(0, buttonWidth, 0, 30)
minusButton.Position = UDim2.new(0, minusButtonXPos, 0, speedControlsYPos)
minusButton.Text = "-"
minusButton.TextScaled = true

-- Speed TextBox
local speedTextBox = Instance.new("TextBox")
speedTextBox.Parent = frame
speedTextBox.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
speedTextBox.Size = UDim2.new(0, speedLabelWidth, 0, 30)
speedTextBox.Position = UDim2.new(0, speedLabelXPos, 0, speedControlsYPos)
speedTextBox.Text = "Speed: 10"
speedTextBox.TextScaled = true
speedTextBox.ClearTextOnFocus = false
speedTextBox.PlaceholderText = "Enter speed"

local function updateSpeedFromTextBox()
	local text = speedTextBox.Text
	local number = tonumber(string.match(text, "%d+"))
	if number and number >= 1 then
		movementSpeed = number
	end
	speedTextBox.Text = "Speed: " .. movementSpeed
end

speedTextBox.FocusLost:Connect(function(enterPressed)
	if enterPressed then
		updateSpeedFromTextBox()
	end
end)

plusButton.MouseButton1Click:Connect(function()
	movementSpeed += 1
	speedTextBox.Text = "Speed: " .. movementSpeed
end)

minusButton.MouseButton1Click:Connect(function()
	if movementSpeed > 1 then
		movementSpeed -= 1
		speedTextBox.Text = "Speed: " .. movementSpeed
	end
end)

-- Spawn platform
local function spawnPlatform()
	local char = player.Character or player.CharacterAdded:Wait()
	local hrp = char:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	if spawnedPlatform then spawnedPlatform:Destroy() end

	spawnedPlatform = Instance.new("Part")
	spawnedPlatform.Name = "RedPlatform"
	spawnedPlatform.Size = Vector3.new(3, 1, 3)
	spawnedPlatform.BrickColor = BrickColor.Red()
	spawnedPlatform.Anchored = true
	spawnedPlatform.CanCollide = false
	spawnedPlatform.Transparency = 0
	spawnedPlatform.Parent = workspace

	spawnedPlatform.CFrame = CFrame.new(hrp.Position + Vector3.new(0, 2.5, 0))
	camera.CameraSubject = spawnedPlatform

	-- GUI controls
	forwardGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
	forwardGui.ResetOnSpawn = false

	local forwardFrame = Instance.new("Frame", forwardGui)
	forwardFrame.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
	forwardFrame.Size = UDim2.new(0, 140, 0, 70)
	forwardFrame.Position = UDim2.new(0, 10, 1, -90)
	forwardFrame.BorderSizePixel = 0
	forwardFrame.Active = true -- Keep properties from original script
	forwardFrame.Draggable = false -- Keep properties from original script

	-- Create Forward Button (Matching original script)
	local forwardBtn = Instance.new("TextButton")
	forwardBtn.Parent = forwardFrame
	forwardBtn.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
	forwardBtn.Size = UDim2.new(0.38, 0, 0.5, 0) -- << SIZE CORRECTED TO MATCH ORIGINAL
	forwardBtn.Position = UDim2.new(0.31, 0, 0, 0) -- Position from original
	forwardBtn.Text = "Forward"
	forwardBtn.TextScaled = true

	-- Create Backward Button (Matching original script)
	local backwardBtn = Instance.new("TextButton")
	backwardBtn.Parent = forwardFrame
	backwardBtn.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
	backwardBtn.Size = UDim2.new(0.38, 0, 0.5, 0) -- << SIZE CORRECTED TO MATCH ORIGINAL
	backwardBtn.Position = UDim2.new(0.31, 0, 0.5, 0) -- Position from original
	backwardBtn.Text = "Backward"
	backwardBtn.TextScaled = true

	-- Create Left Button (Matching original script)
	local leftBtn = Instance.new("TextButton")
	leftBtn.Parent = forwardFrame
	leftBtn.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
	leftBtn.Size = UDim2.new(0.3, 0, 1, 0) -- << SIZE CORRECTED TO MATCH ORIGINAL
	leftBtn.Position = UDim2.new(0, 0, 0, 0) -- Position from original
	leftBtn.Text = "Left"
	leftBtn.TextScaled = true

	-- Create Right Button (Matching original script)
	local rightBtn = Instance.new("TextButton")
	rightBtn.Parent = forwardFrame
	rightBtn.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
	rightBtn.Size = UDim2.new(0.3, 0, 1, 0) -- << SIZE CORRECTED TO MATCH ORIGINAL
	rightBtn.Position = UDim2.new(0.7, 0, 0, 0) -- Position from original
	rightBtn.Text = "Right"
	rightBtn.TextScaled = true

	local targetRotation = 0

	game:GetService("RunService").RenderStepped:Connect(function()
		if not spawnedPlatform or not isPlatformActive then return end

		local camCF = camera.CFrame
		targetRotation = math.atan2(camCF.RightVector.X, camCF.RightVector.Z)
		local newCF = CFrame.new(spawnedPlatform.Position) * CFrame.Angles(0, targetRotation, 0)
		spawnedPlatform.CFrame = newCF

		local dist = (spawnedPlatform.Position - camCF.Position).Magnitude
		spawnedPlatform.Transparency = dist <= 10 and 1 or 0
	end)

	local function movePlatform(dir)
		if not isPlatformActive or not spawnedPlatform then return end
		local dirVec = {
			forward = camera.CFrame.LookVector,
			backward = -camera.CFrame.LookVector,
			right = camera.CFrame.RightVector,
			left = -camera.CFrame.RightVector
		}
		local offset = dirVec[dir] * movementSpeed
		local targetCF = CFrame.new(spawnedPlatform.Position + offset) * CFrame.Angles(0, targetRotation, 0)

		if currentTween then currentTween:Cancel() end
		local tweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		currentTween = tweenService:Create(spawnedPlatform, tweenInfo, {CFrame = targetCF})
		currentTween:Play()

		camera.CameraSubject = spawnedPlatform
	end

	forwardBtn.MouseButton1Click:Connect(function() movePlatform("forward") end)
	backwardBtn.MouseButton1Click:Connect(function() movePlatform("backward") end)
	rightBtn.MouseButton1Click:Connect(function() movePlatform("right") end)
	leftBtn.MouseButton1Click:Connect(function() movePlatform("left") end)
end

-- Destroy platform
local function destroyPlatform()
	if forwardGui then forwardGui:Destroy() end
	if spawnedPlatform then
		if camera.CameraSubject == spawnedPlatform then
			local char = player.Character
			if char then
				camera.CameraSubject = char:FindFirstChild("Humanoid") or char:FindFirstChild("HumanoidRootPart")
			end
		end
		spawnedPlatform:Destroy()
		spawnedPlatform = nil
		currentTween = nil
	end
end

-- Button handlers
onButton.MouseButton1Click:Connect(function()
	if not isPlatformActive then
		spawnPlatform()
		isPlatformActive = true
		statusLabel.Text = "Status: On"
		statusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
	end
end)

offButton.MouseButton1Click:Connect(function()
	if isPlatformActive then
		destroyPlatform()
		isPlatformActive = false
		statusLabel.Text = "Status: Off"
		statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
	end
end)

destroyButton.MouseButton1Click:Connect(function()
	if isPlatformActive then
		destroyPlatform()
		isPlatformActive = false
	end
	screenGui:Destroy()
end)
