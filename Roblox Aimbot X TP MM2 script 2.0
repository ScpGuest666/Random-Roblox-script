-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false

-- Create Frame
local frame = Instance.new("Frame")
frame.Parent = screenGui
frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
frame.Size = UDim2.new(0, 200, 0, 150)
frame.Position = UDim2.new(0.5, -100, 0.5, -75)
frame.Active = true
frame.Draggable = true

-- Create TextBox for player input
local playerInput = Instance.new("TextBox")
playerInput.Parent = frame
playerInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
playerInput.Size = UDim2.new(0, 160, 0, 30)
playerInput.Position = UDim2.new(0, 20, 0, 20)
playerInput.PlaceholderText = "Enter Player Name"
playerInput.TextScaled = true

-- Create On Button
local onButton = Instance.new("TextButton")
onButton.Parent = frame
onButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
onButton.Size = UDim2.new(0, 60, 0, 30)
onButton.Position = UDim2.new(0, 20, 0, 60)
onButton.Text = "On"
onButton.TextScaled = true

-- Create Off Button
local offButton = Instance.new("TextButton")
offButton.Parent = frame
offButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
offButton.Size = UDim2.new(0, 60, 0, 30)
offButton.Position = UDim2.new(0, 120, 0, 60)
offButton.Text = "Off"
offButton.TextScaled = true

-- Create Destroy Button
local destroyButton = Instance.new("TextButton")
destroyButton.Parent = frame
destroyButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
destroyButton.Size = UDim2.new(0, 160, 0, 30)
destroyButton.Position = UDim2.new(0, 20, 0, 100)
destroyButton.Text = "Destroy"
destroyButton.TextScaled = true

-- Create Status Indicator
local statusLabel = Instance.new("TextLabel")
statusLabel.Parent = frame
statusLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.Size = UDim2.new(0, 200, 0, 30)
statusLabel.Position = UDim2.new(0, 0, 0, -30)
statusLabel.Text = "Status: Off"
statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
statusLabel.TextScaled = true

local lookAtEnabled = false

-- Function to find a player by partial name match
local function findPlayerByName(partialName)
    for _, player in pairs(game.Players:GetPlayers()) do
        if string.find(string.lower(player.Name), string.lower(partialName)) or string.find(string.lower(player.DisplayName), string.lower(partialName)) then
            return player
        end
    end
    return nil
end

-- Improved Prediction Function with zig-zag and jump compensation
local function predictPlayerPosition(targetPlayer)
    if targetPlayer and targetPlayer.Character then
        local targetRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
        local humanoid = targetPlayer.Character:FindFirstChild("Humanoid")
        if targetRootPart and humanoid then
            local velocity = targetRootPart.Velocity
            local localRootPart = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            local distance = (targetRootPart.Position - localRootPart.Position).Magnitude

            -- Base prediction time
            local predictionTime = 0.2

            -- Modify prediction based on movement
            if humanoid.FloorMaterial == Enum.Material.Air then
                predictionTime = 0.05 -- Quicker reaction when jumping
            elseif velocity.Magnitude > 25 then
                predictionTime = 0.35 -- Fast movement prediction
            else
                predictionTime = 0.25 -- Default
            end

            -- Zig-zag detection and compensation
            if math.abs(velocity.X) > 20 or math.abs(velocity.Z) > 20 then
                predictionTime = predictionTime + 0.1 -- Extra time for zig-zagging
            end

            -- Calculate future position
            local positionOffset = velocity * predictionTime
            local predictedPosition = targetRootPart.Position + positionOffset

            -- Smooth prediction for erratic turns
            if distance < 15 then
                predictedPosition = predictedPosition * 0.9 -- Dampen over-prediction
            end

            -- Check for obstacles in the predicted path
            local ray = Ray.new(targetRootPart.Position, velocity.Unit * 10)
            local hit, hitPosition = workspace:FindPartOnRay(ray)
            if hit and not hit:IsDescendantOf(targetPlayer.Character) then
                predictedPosition = hitPosition -- Adjust for obstacles
            end

            return predictedPosition
        end
    end
    return nil
end

-- Detect if the local player is moving
local function isPlayerMoving()
    local localPlayer = game.Players.LocalPlayer
    local character = localPlayer.Character
    if character then
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid then
            return humanoid.MoveDirection.Magnitude > 0
        end
    end
    return false
end

-- Function to make the camera look at the predicted position
local function lookAtPredictedPosition(targetPlayer)
    local camera = workspace.CurrentCamera
    local localPlayer = game.Players.LocalPlayer
    local character = localPlayer.Character

    if character then
        if not isPlayerMoving() then
            local predictedPosition = predictPlayerPosition(targetPlayer)
            if predictedPosition then
                camera.CFrame = CFrame.new(camera.CFrame.Position, predictedPosition)
            end
        end
    end
end

-- Loop to continuously update camera direction towards predicted position
local lookAtLoop = spawn(function()
    while true do
        if lookAtEnabled then
            local targetPlayer = findPlayerByName(playerInput.Text)
            if targetPlayer then
                lookAtPredictedPosition(targetPlayer)
            end
        end
        wait(0.03) -- Small delay to keep the loop efficient
    end
end)

-- On Button: Enable prediction
onButton.MouseButton1Click:Connect(function()
    lookAtEnabled = true
    statusLabel.Text = "Status: On"
    statusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
end)

-- Off Button: Disable prediction
offButton.MouseButton1Click:Connect(function()
    lookAtEnabled = false
    statusLabel.Text = "Status: Off"
    statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
end)

-- Destroy Button: Reset and destroy GUI
destroyButton.MouseButton1Click:Connect(function()
    lookAtEnabled = false -- Disable the feature

    -- Reset the camera back to normal behavior
    local camera = workspace.CurrentCamera
    camera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
    
    screenGui:Destroy() -- Destroy the GUI
end)

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false

-- Create Frame
local frame = Instance.new("Frame")
frame.Parent = screenGui
frame.BackgroundColor3 = Color3.fromRGB(255, 0, 255)
frame.Size = UDim2.new(0, 200, 0, 150)
frame.Position = UDim2.new(0.5, -100, 0.5, -75)
frame.Active = true
frame.Draggable = true

-- Create TextBox for player input
local playerInput = Instance.new("TextBox")
playerInput.Parent = frame
playerInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
playerInput.Size = UDim2.new(0, 160, 0, 30)
playerInput.Position = UDim2.new(0, 20, 0, 20)
playerInput.PlaceholderText = "Enter Player Name"
playerInput.TextScaled = true

-- Create On Button
local onButton = Instance.new("TextButton")
onButton.Parent = frame
onButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
onButton.Size = UDim2.new(0, 60, 0, 30)
onButton.Position = UDim2.new(0, 20, 0, 60)
onButton.Text = "On"
onButton.TextScaled = true

-- Create Off Button
local offButton = Instance.new("TextButton")
offButton.Parent = frame
offButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
offButton.Size = UDim2.new(0, 60, 0, 30)
offButton.Position = UDim2.new(0, 120, 0, 60)
offButton.Text = "Off"
offButton.TextScaled = true

-- Create Destroy Button
local destroyButton = Instance.new("TextButton")
destroyButton.Parent = frame
destroyButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
destroyButton.Size = UDim2.new(0, 160, 0, 30)
destroyButton.Position = UDim2.new(0, 20, 0, 100)
destroyButton.Text = "Destroy"
destroyButton.TextScaled = true

-- Create Status Indicator
local statusLabel = Instance.new("TextLabel")
statusLabel.Parent = frame
statusLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.Size = UDim2.new(0, 200, 0, 30)
statusLabel.Position = UDim2.new(0, 0, 0, -30)
statusLabel.Text = "Status: Off"
statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
statusLabel.TextScaled = true

local teleportEnabled = false
local originalPosition -- Variable to store original position of the local player

-- Function to find a player by partial name match
local function findPlayerByName(partialName)
    for _, player in pairs(game.Players:GetPlayers()) do
        if string.find(string.lower(player.Name), string.lower(partialName)) or string.find(string.lower(player.DisplayName), string.lower(partialName)) then
            return player
        end
    end
    return nil
end

-- Teleport function to teleport the local player to a specific player by partial name
local function teleportToPlayerByName(partialName)
    local localPlayer = game.Players.LocalPlayer
    local character = localPlayer.Character
    if character then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            local targetPlayer = findPlayerByName(partialName)
            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local targetRootPart = targetPlayer.Character.HumanoidRootPart
                
                -- Save the original position if not already saved
                if not originalPosition then
                    originalPosition = rootPart.CFrame
                end
                
                -- Teleport the local player's character to behind the target player
                rootPart.CFrame = targetRootPart.CFrame * CFrame.new(0, 0, 20)
            end
        end
    end
end

-- Reset function to teleport the local player back to the original position
local function resetPlayerToOriginalPosition()
    local localPlayer = game.Players.LocalPlayer
    local character = localPlayer.Character
    if character and originalPosition then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            rootPart.CFrame = originalPosition
            originalPosition = nil -- Clear the original position after teleporting back
        end
    end
end

-- Function to equip and shoot the gun
local function equipAndShootGun()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local tool = player.Backpack:FindFirstChild("Gun") or character:FindFirstChild("Gun")
    
    if tool then
        tool.Parent = character -- Equip the gun
        wait(0.5) -- Wait to ensure the gun is equipped
        -- Simulate shooting the gun
        while statusLabel.Text == "Status: On" do
            tool:Activate() -- Simulate gun firing
            wait(0.2) -- Adjust the delay to control firing rate
        end
    else
        warn("No gun found!")
    end
end

-- Function to unequip the gun
local function unequipGun()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local tool = character:FindFirstChild("Gun")
    
    if tool then
        tool.Parent = player.Backpack -- Unequip the gun by moving it to the backpack
    end
end

-- Button Functions
onButton.MouseButton1Click:Connect(function()
    teleportEnabled = true
    statusLabel.Text = "Status: On"
    statusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    teleportToPlayerByName(playerInput.Text) -- Teleport to the player once
    equipAndShootGun() -- Equip and shoot the gun
end)

offButton.MouseButton1Click:Connect(function()
    teleportEnabled = false
    statusLabel.Text = "Status: Off"
    statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
    resetPlayerToOriginalPosition() -- Teleport the local player back to their original position
    unequipGun() -- Unequip the gun
end)

destroyButton.MouseButton1Click:Connect(function()
    teleportEnabled = false -- Disable teleportation
    resetPlayerToOriginalPosition() -- Teleport the local player back to their original position
    unequipGun() -- Unequip the gun
    screenGui:Destroy() -- Destroy the GUI
end)
