-- Utility function to create buttons
local function createButton(parent, position, size, bgColor, text, scaled)
    local button = Instance.new("TextButton")
    button.Parent = parent
    button.Size = size
    button.Position = position
    button.BackgroundColor3 = bgColor
    button.Text = text
    button.TextScaled = scaled
    return button
end

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false

-- Create Frame
local frame = Instance.new("Frame")
frame.Parent = screenGui
frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
frame.Size = UDim2.new(0, 200, 0, 180)
frame.Position = UDim2.new(0.5, -100, 0.5, -90)
frame.Active = true
frame.Draggable = true

-- Create TextBox for player input
local playerInput = Instance.new("TextBox")
playerInput.Parent = frame
playerInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
playerInput.Size = UDim2.new(0, 160, 0, 30)
playerInput.Position = UDim2.new(0, 20, 0, 20)
playerInput.PlaceholderText = "Enter Player Name"
playerInput.TextScaled = true

-- UI Elements: On, Off, Destroy, Status Label, + and -
local onButton = createButton(frame, UDim2.new(0, 20, 0, 60), UDim2.new(0, 60, 0, 30), Color3.fromRGB(0, 255, 0), "On", true)
local offButton = createButton(frame, UDim2.new(0, 120, 0, 60), UDim2.new(0, 60, 0, 30), Color3.fromRGB(255, 0, 0), "Off", true)
local destroyButton = createButton(frame, UDim2.new(0, 20, 0, 100), UDim2.new(0, 160, 0, 30), Color3.fromRGB(255, 255, 255), "Destroy", true)
local plusButton = createButton(frame, UDim2.new(0, 20, 0, 140), UDim2.new(0, 40, 0, 30), Color3.fromRGB(0, 255, 255), "+", true)
local minusButton = createButton(frame, UDim2.new(0, 140, 0, 140), UDim2.new(0, 40, 0, 30), Color3.fromRGB(255, 165, 0), "-", true)

-- Status Label
local statusLabel = Instance.new("TextLabel")
statusLabel.Parent = frame
statusLabel.Size = UDim2.new(0, 200, 0, 30)
statusLabel.Position = UDim2.new(0, 0, 0, -30)
statusLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.Text = "Status: Off"
statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
statusLabel.TextScaled = true

-- Variables to manage follow/dodge distances and state
local followDistance = 10
local dodgeDistance = 9.9
local lookAtEnabled = false

-- Function to find a player by partial name
local function findPlayerByName(partialName)
    partialName = string.lower(partialName)
    for _, player in pairs(game.Players:GetPlayers()) do
        if string.find(string.lower(player.Name), partialName) or string.find(string.lower(player.DisplayName), partialName) then
            return player
        end
    end
    return nil
end

-- Improved function to move the character towards/away from target player with obstacle detection
local function moveToPlayer(targetPlayer)
    local localPlayer = game.Players.LocalPlayer
    local localRootPart = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")
    local targetRootPart = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")

    if localRootPart and targetRootPart then
        local distance = (localRootPart.Position - targetRootPart.Position).Magnitude

        -- Check if the character is within a small range around the followDistance (to stop circling)
        if math.abs(distance - followDistance) > 0.5 then
            local direction = (targetRootPart.Position - localRootPart.Position).unit
            local newPosition = targetRootPart.Position - (direction * followDistance)

            -- Perform a raycast to detect obstacles in the movement path
            local ray = Ray.new(localRootPart.Position, direction * followDistance)
            local hitPart, hitPosition = workspace:FindPartOnRay(ray, localPlayer.Character)

            if hitPart then
                -- If an obstacle is detected, attempt to dodge by sidestepping
                local dodgeDirection = Vector3.new(-direction.Z, 0, direction.X) -- Perpendicular to the target direction
                newPosition = localRootPart.Position + (dodgeDirection * dodgeDistance)
            end

            localPlayer.Character.Humanoid:MoveTo(newPosition)

        elseif distance < dodgeDistance then
            -- Dodge away from the target player if too close
            local dodgeDirection = (localRootPart.Position - targetRootPart.Position).unit
            local dodgePosition = localRootPart.Position + (dodgeDirection * dodgeDistance)
            localPlayer.Character.Humanoid:MoveTo(dodgePosition)
        else
            -- Stop moving if within range to avoid circling
            localPlayer.Character.Humanoid:MoveTo(localRootPart.Position)
        end
    end
end

-- Loop to continuously follow/dodge player
local followLoop
local function startFollowing()
    if followLoop then return end
    followLoop = game:GetService("RunService").Heartbeat:Connect(function()
        if lookAtEnabled then
            local targetPlayer = findPlayerByName(playerInput.Text)
            if targetPlayer then
                moveToPlayer(targetPlayer)
            end
        end
    end)
end

local function stopFollowing()
    if followLoop then
        followLoop:Disconnect()
        followLoop = nil
    end
end

-- Update status label
local function updateStatusLabel()
    statusLabel.Text = "Status: On (Follow: " .. tostring(followDistance) .. " studs, Dodge: " .. tostring(dodgeDistance) .. " studs)"
end

-- Button Event Listeners
plusButton.MouseButton1Click:Connect(function()
    followDistance = math.min(20, followDistance + 1)  -- Max 20 studs
    dodgeDistance = math.min(20, dodgeDistance + 1)
    updateStatusLabel()
end)

minusButton.MouseButton1Click:Connect(function()
    followDistance = math.max(1, followDistance - 1)   -- Min 1 stud
    dodgeDistance = math.max(1, dodgeDistance - 1)
    updateStatusLabel()
end)

onButton.MouseButton1Click:Connect(function()
    lookAtEnabled = true
    updateStatusLabel()
    statusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    startFollowing()
end)

offButton.MouseButton1Click:Connect(function()
    lookAtEnabled = false
    statusLabel.Text = "Status: Off"
    statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
    stopFollowing()
end)

destroyButton.MouseButton1Click:Connect(function()
    lookAtEnabled = false
    stopFollowing()
    screenGui:Destroy()
end)
